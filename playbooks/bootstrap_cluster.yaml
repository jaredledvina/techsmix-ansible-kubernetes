---
- hosts: all
  gather_facts: false
  become: true
  vars:
    pinned_version: '1.13*'
  tasks:
    - name: Deploy SSH public key for saner access
      authorized_key:
        user: "{{ ansible_user }}"
        state: present
        exclusive: true
        key: "{{ lookup('file', ansible_ssh_private_key_file) }}"

    - name: Ensure cluster is fully up to date
      apt:
        name: '*'
        state: latest
        update_cache: true
        autoclean: true
        autoremove: true

    - name: Ensure apt dependencies are installed
      apt:
        name: "{{ item }}"
        state: present
      loop:
        - apt-transport-https
        - ca-certificates

    - name: Ensure Kubernetes apt key is installed
      apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        id: BA07F4FB

    - name: Ensure Kubernetes apt pinning is configured
      template:
        src: templates/apt-preferences-kubernetes.j2
        dest: /etc/apt/preferences.d/kubernetes
        owner: root
        group: root
        mode: 0644
      when: pinned_version is defined

    - name: Ensure Kubernetes apt repo is configured
      apt_repository:
        repo: deb http://apt.kubernetes.io/ kubernetes-xenial main
        filename: kubernetes

    - name: Ensure Kubernetes components are installed
      apt:
        name: "{{ item }}"
        state: present
      loop:
        - kubelet
        - kubeadm
        - kubectl

    - name: Ensure rng-tools is installed for more randomness
      apt:
        name: rng-tools
        state: present

    - name: Ensure rng-tools is running and starts at boot
      service:
        name: rng-tools
        enabled: true
        state: started

    # TODO: One day, https://github.com/ansible/ansible/issues/16186
    - name: Kick the cluster
      shell: sleep 2 && /bin/systemctl --no-wall reboot
      async: 1
      poll: 0
      ignore_errors: true

    - name: Wait for cluster to come online
      wait_for_connection:
        delay: 10
