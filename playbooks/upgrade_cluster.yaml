---
- hosts: master
  any_errors_fatal: true
  gather_facts: false
  become: true
  vars:
    kubeadmn_extras: ''
    pinned_version: '1.13*'
    kube_version: v1.13.3 # See https://storage.googleapis.com/kubernetes-release/release/stable.txt
    arch: arm
  tasks:
    - name: Fetch the latest kubeadm binary
      get_url:
        url: "https://dl.k8s.io/release/{{ kube_version }}/bin/linux/{{ arch }}/kubeadm"
        dest: /usr/bin/kubeadm
        mode: 0775
        force: true

    - name: Get the kubeadm version
      command: kubeadm version --output short
      changed_when: false
      register: new_kubeadm_version

    - name: Verify we got the correct kubeadm version
      assert:
        that:
          - "kube_version == new_kubeadm_version.stdout"
        msg: "Kubeadm is {{ new_kubeadm_version.stdout }} but we want {{ kube_version }}"

    - name: Execute kubeadm upgrade plan
      command: "kubeadm upgrade plan {{ kubeadmn_extras | default('') }}"
      register: kubeadm_plan
      changed_when: false

    - name: Display plan
      debug:
        var: kubeadm_plan

    - name: Pause for upgrade plan verification
      pause:
        prompt: Verify that the output of kubeadm upgrade plan looks good

    - name: Execute kubeadm upgrade apply
      command: "kubeadm upgrade apply {{ kube_version }} --yes"
      register: kubeadm_apply

    - name: Dump apply output
      debug:
        var: kubeadm_apply

    - name: Ensure Kubernetes apt pinning is configured
      template:
        src: templates/apt-preferences-kubernetes.j2
        dest: /etc/apt/preferences.d/kubernetes
        owner: root
        group: root
        mode: 0644
      when: pinned_version is defined

    - name: Ensure we've upgrade Kubernetes
      apt:
        name: "{{ item }}"
        state: latest
        update_cache: true
      loop:
        - kubectl
        - kubelet
        - kubeadm

- hosts: nodes
  serial: 1
  any_errors_fatal: true
  gather_facts: false
  become: true
  vars:
    restart_nodes: true
    pinned_version: '1.13*'
  tasks:
    - name: Drain pods from node
      local_action: "command kubectl drain {{ inventory_hostname }} --ignore-daemonsets --force --delete-local-data"
      become: false

    - name: Ensure Kubernetes apt pinning is configured
      template:
        src: templates/apt-preferences-kubernetes.j2
        dest: /etc/apt/preferences.d/kubernetes
        owner: root
        group: root
        mode: 0644
      when: pinned_version is defined

    - name: Ensure we've upgrade Kubernetes
      apt:
        name: "{{ item }}"
        state: latest
        update_cache: true
      loop:
        - kubectl
        - kubelet
        - kubeadm

    - name: Upgrade kubelet config
      shell: kubeadm upgrade node config --kubelet-version $(kubelet --version | cut -d ' ' -f 2)

    - name: Restart kubelet
      service:
        name: kubelet
        state: restarted

    - name: Uncordon node
      local_action: "command kubectl uncordon {{ inventory_hostname }}"
      become: false
